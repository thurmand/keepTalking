var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import resolveRule from './resolveRule';

export default function FelaComponentFactory(createElement, FelaTheme, contextTypes) {
  function FelaComponent(_ref, _ref2) {
    var renderer = _ref2.renderer;

    var _ref$render = _ref.render,
        _render = _ref$render === undefined ? 'div' : _ref$render,
        style = _ref.style,
        rule = _ref.rule,
        children = _ref.children,
        restProps = _objectWithoutProperties(_ref, ['render', 'style', 'rule', 'children']);

    return createElement(FelaTheme, {
      render: function render(theme) {
        var props = rule ? _extends({ theme: theme }, restProps) : theme;

        var className = renderer._renderStyle(resolveRule(rule || style, props, renderer), props);

        if (_render instanceof Function) {
          return _render({
            className: className,
            theme: theme
          });
        }

        return createElement(_render, { className: className }, children);
      }
    });
  }

  if (contextTypes) {
    FelaComponent.contextTypes = contextTypes;
  }

  return FelaComponent;
}